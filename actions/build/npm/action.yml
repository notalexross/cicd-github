# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: NPM build
description: Build
inputs:
  env:
    description: Environment variables
    required: false
outputs:
  test_results:
    description: JSON Summary of test results
    value: ${{ steps.process.outputs.test_results }}
  lint_status:
    description: Outcome of lint step, i.e. success, failure, cancelled, or skipped
    value: ${{ steps.lint.outputs.outcome }}
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: npm
    - id: install
      shell: bash
      run: |
        if ! npm ci; then
          echo "::warning::\"npm ci\" failed, using \"npm i\" instead."
          npm i
        fi
    - id: lint
      if: ${{ always() && steps.install.outcome == 'success' }}
      uses: notalexross/cicd-github/actions/run-if-present@main
      with:
        script: lint
        env: ${{ inputs.env }}
    - id: test
      if: ${{ always() && steps.install.outcome == 'success' }}
      uses: notalexross/cicd-github/actions/run-if-present@main
      with:
        script: >
          test --
          --passWithNoTests
          --coverage
          --coverageReporters=json-summary
          --coverageDirectory=./coverage
          --json
          --outputFile ./coverage/test-results.json
        env: ${{ inputs.env }}
    - id: parse
      if: ${{ always() && contains(fromJson('["success", "failure"]'), steps.test.outputs.outcome) }}
      shell: bash
      run: |
        tests_json=$(cat ./coverage/test-results.json)
        coverage_json=$(cat ./coverage/coverage-summary.json)
        echo "::set-output name=tests_json::${tests_json//$'\n'/''}"
        echo "::set-output name=coverage_json::${coverage_json//$'\n'/''}"
    - id: process
      if: ${{ always() && !!steps.parse.outputs.coverage_json && !!steps.parse.outputs.tests_json }}
      shell: bash
      run: |
        coverage=${{ fromJson(steps.parse.outputs.coverage_json).total.lines.pct }}
        num_total_tests=${{ fromJson(steps.parse.outputs.tests_json).numTotalTests }}
        num_passed_tests=${{ fromJson(steps.parse.outputs.tests_json).numPassedTests }}
        num_failed_tests=${{ fromJson(steps.parse.outputs.tests_json).numFailedTests }}
        test_results={\"coverage\":\"$coverage\",\"numTotalTests\":\"$num_total_tests\",\"numPassedTests\":\"$num_passed_tests\",\"numFailedTests\":\"$num_failed_tests\"}
        echo "::set-output name=test_results::$test_results"
    - uses: notalexross/cicd-github/actions/run-if-present@main
      with:
        script: build
        env: ${{ inputs.env }}
        error_level: error
